{"version":3,"file":"static/js/528.b63f5ca1.chunk.js","mappings":"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","sources":["components/Hooks/hooks.js","components/ContactsForm.jsx","components/Filter.jsx","components/ContactListElem.jsx","components/ContactsList.jsx","views/Contacts.jsx"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contactsSlise';\nimport { contactsOperations } from '../../redux/contacts/contactsOperations';\n\nexport const useContacts = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(state => state.contacts.filter);\n  const contacts = useSelector(state => state.contacts.items);\n  const isLoaging = useSelector(state => state.contacts.loader);\n  const error = useSelector(state => state.contacts.error);\n\n  const setFilter = value => {\n    dispatch(changeFilter(value));\n  };\n\n  const getContacts = () => {\n    dispatch(contactsOperations.getContacts());\n  };\n\n  const addContact = data => {\n    dispatch(contactsOperations.addContact(data));\n  };\n\n  const deleteContact = id => {\n    dispatch(contactsOperations.deleteContact(id));\n  };\n\n  return {\n    filter,\n    contacts,\n    isLoaging,\n    error,\n    setFilter,\n    getContacts,\n    addContact,\n    deleteContact,\n  };\n};\n","import s from '../Styles.module.css';\n\nimport { useState } from 'react';\nimport { useContacts } from './Hooks/hooks';\nimport { infoToast, successToast } from './Toasts';\n\nexport const ContacstForm = () => {\n  const { contacts, addContact } = useContacts();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n    console.log(name, value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const enterContacts = contacts.some(\n      contact =>\n        (contact.name === name.toLowerCase() && contact.number === number) ||\n        contact.number === number\n    );\n    enterContacts\n      ? infoToast(`${name} or ${number} is already in contacts`)\n      : addContact({ name, number });\n    !enterContacts && successToast('the contact is in the list  😃');\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={s.cont__container}>\n      <form className={s.form__container} onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"number number must be at least 5 digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n        <button type=\"submit \" className={s.form__btn}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","import s from '../Styles.module.css';\nimport { useContacts } from './Hooks/hooks';\n\nexport const Filter = () => {\n  const { filter, setFilter } = useContacts();\n  return (\n    <div className={s.cont__container}>\n      <h2 className={s.home__title}>Filter contacts by name</h2>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"Find contact by name\"\n        onChange={e => setFilter(e.target.value)}\n      />\n    </div>\n  );\n};\n","import { useContacts } from './Hooks/hooks';\nimport { deleteToast } from './Toasts';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { contactsOperations } from '../redux/contacts/contactsOperations';\nimport s from '../Styles.module.css';\n\nexport const ContactListElem = ({ id, name, phone }) => {\n    \n    const dispatch = useDispatch();\n    const { deleteContact, setFilter } =\n    useContacts();\n    \n    useEffect(() => {\n        dispatch(contactsOperations.getContacts());\n      }, [dispatch]);\n\n    return (\n    <li className={s.item}>\n        <p className={s.item__name}>\n        {name}: {phone}\n        </p>\n        <button className={s.user__btn} type=\"button\" onClick={() => {\n                      deleteContact(id);\n                      deleteToast(`${name} tel:${phone} is deleted`);\n                      setFilter('');\n                    }}>\n            Delete\n        </button>\n    </li>\n    );\n    }\n\n\n\n\n\n\n\n","import s from '../Styles.module.css';\nimport { ContactListElem } from '../components/ContactListElem';\nimport { Loader } from '../components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useContacts } from './Hooks/hooks';\nimport { contactsOperations } from '../redux/contacts/contactsOperations';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nexport const ContactsList = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  const dispatch = useDispatch();\n  const { contacts, isLoaging, filter } =\n    useContacts();\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n\n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    if (contacts) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  };\n\n  const filteredContacts = findContacts();\n\n  return (\n    <div>\n      {isLoaging && <Loader />}\n      {isLoggedIn && (\n        <ul className={s.items__container}>\n          {contacts &&\n            filteredContacts.map(({ id, name, number }) => {\n              return (\n                <ContactListElem\n                key={id}\n                id={id}\n                name={name}\n                phone={number}\n              />\n              );\n            })}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import s from '../Styles.module.css';\nimport { ContacstForm } from '../components/ContactsForm';\nimport { Filter } from '../components/Filter';\nimport { ContactsList } from '../components/ContactsList';\n\nconst Contacts = () => {\n  return (\n    <div className={s.view__container}>\n      <h2 className={s.home__title}>\n        Enter a name and phone number to add a contact\n      </h2>\n      <ContacstForm />\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["useContacts","dispatch","useDispatch","filter","useSelector","state","contacts","items","isLoaging","loader","error","setFilter","value","changeFilter","getContacts","contactsOperations","addContact","data","deleteContact","id","ContacstForm","useState","name","setName","number","setNumber","handleChange","event","target","console","log","handleSubmit","preventDefault","enterContacts","some","contact","toLowerCase","infoToast","successToast","className","s","onSubmit","type","placeholder","pattern","title","required","onChange","Filter","e","ContactListElem","phone","useEffect","onClick","deleteToast","ContactsList","isLoggedIn","authSelectors","filteredContacts","normalizedFilter","includes","findContacts","Loader","map"],"sourceRoot":""}